name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  attestations: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ejlevin1'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use a PAT with admin permissions that can bypass branch protection
          token: ${{ secrets.ADMIN_PAT || secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install semantic-release dependencies
        run: |
          npm init -y || true
          npm install --save-dev \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/exec

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_PAT || secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: semantic-release-bot
          GIT_AUTHOR_EMAIL: semantic-release-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: semantic-release-bot
          GIT_COMMITTER_EMAIL: semantic-release-bot@users.noreply.github.com
        run: |
          # Check if we have an admin PAT
          if [ -n "${{ secrets.ADMIN_PAT }}" ]; then
            echo "Using admin PAT for semantic-release (can bypass branch protection)"
            npx semantic-release
          else
            echo "No admin PAT found, using no-git configuration"
            npx semantic-release --extends ./.releaserc-no-git.json
          fi

      # Rest of the workflow remains the same...
      - name: Build Caddy with plugin
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          xcaddy build \
            --with github.com/ejlevin1/caddy-failover=. \
            --output ./caddy

      # ... (rest of the steps from the original workflow)
