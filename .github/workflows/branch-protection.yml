name: Configure Branch Protection

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/branch-protection.yml'

permissions:
  contents: write
  pull-requests: write
  # Note: Branch protection requires admin permissions which GITHUB_TOKEN doesn't have
  # You must use a PAT (Personal Access Token) with repo and admin:repo permissions

jobs:
  configure-protection:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ejlevin1' && github.ref == 'refs/heads/main'

    steps:
      - name: Configure main branch protection
        uses: actions/github-script@v7
        with:
          # Use PAT instead of GITHUB_TOKEN for admin permissions
          # Create a PAT with 'repo' and 'admin:repo' scopes
          github-token: ${{ secrets.ADMIN_PAT || secrets.GITHUB_TOKEN }}
          script: |
            try {
              // Check if we're using a PAT or GITHUB_TOKEN
              const token = '${{ secrets.ADMIN_PAT }}';
              if (!token || token === '') {
                console.log('‚ö†Ô∏è  Warning: ADMIN_PAT secret not configured');
                console.log('   Branch protection requires a Personal Access Token with admin permissions');
                console.log('   The default GITHUB_TOKEN does not have sufficient permissions\n');
              }

              await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'main',
                required_status_checks: {
                  strict: true,
                  contexts: ['test', 'build', 'commitlint']
                },
                enforce_admins: false,
                required_pull_request_reviews: {
                  required_approving_review_count: 1,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  require_last_push_approval: false,
                  bypass_pull_request_allowances: {
                    users: ['ejlevin1', 'semantic-release-bot'],
                    teams: [],
                    apps: []
                  }
                },
                restrictions: null,
                allow_force_pushes: false,
                allow_deletions: false,
                block_creations: false,
                required_conversation_resolution: true,
                lock_branch: false,
                allow_fork_syncing: false
              });

              console.log('‚úÖ Branch protection rules configured successfully for main branch');
            } catch (error) {
              console.error('‚ùå Failed to configure branch protection:', error.message);

              // If the error is due to missing admin permissions, provide instructions
              if (error.status === 403) {
                console.log('\nüìù To automate branch protection, you need to:');
                console.log('1. Create a Personal Access Token (PAT):');
                console.log('   - Go to GitHub Settings ‚Üí Developer settings ‚Üí Personal access tokens');
                console.log('   - Create a token with "repo" and "admin:repo_hook" scopes');
                console.log('2. Add the PAT as a repository secret:');
                console.log('   - Go to repository Settings ‚Üí Secrets and variables ‚Üí Actions');
                console.log('   - Add a new secret named "ADMIN_PAT" with your token value');
                console.log('\nAlternatively, configure branch protection manually:');
                console.log('1. Go to Settings ‚Üí Branches');
                console.log('2. Click "Add rule" for the main branch');
                console.log('3. Configure the protection settings as needed');

                // Don't fail the workflow for permission issues
                console.log('\n‚ö†Ô∏è  Continuing without branch protection (requires manual setup)');
                process.exit(0);
              } else {
                // For other errors, still fail the workflow
                throw error;
              }
            }
